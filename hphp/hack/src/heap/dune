(library
 (name heap_libc)
 (wrapped false)
 (modules)
 (foreign_stubs
  (language c)
  (names hh_assert hh_shared)
  (flags
   (:standard
    (:include config/c_flags.sexp))))
 (library_flags
  (:standard
   (:include config/library_flags.sexp)))
 (flags
  (:standard
   (:include config/flags.sexp)))
 (c_library_flags
  (:standard
   (:include config/c_library_flags.sexp)))
 (preprocess
  (pps ppx_deriving.std visitors.ppx))
 (libraries ocamlpool shmffi utils_core))

(library
 (name heap_ident)
 (wrapped false)
 (modules ident)
 (libraries collections utils_core)
 (preprocess
  (pps ppx_deriving.std visitors.ppx)))

(library
 (name heap_shared_mem_hash)
 (wrapped false)
 (modules sharedMemHash)
 (preprocess
  (pps ppx_deriving.std visitors.ppx))
 (libraries heap_libc ocamlpool shmffi))

(library
 (name heap_shared_mem)
 (wrapped false)
 (modules prefix sharedMem)
 (preprocess
  (pps ppx_deriving.std visitors.ppx))
 (libraries
  global_config
  heap_libc
  logging_common
  ocamlpool
  shmffi
  utils_core
  worker_cancel))

(library
 (name worker_cancel)
 (wrapped false)
 (modules workerCancel)
 (preprocess
  (pps ppx_deriving.std visitors.ppx))
 (libraries heap_libc ocamlpool shmffi utils_core))

(library
 (name heap_global_storage)
 (wrapped false)
 (modules globalStorage)
 (preprocess
  (pps ppx_deriving.std visitors.ppx))
 (libraries heap_libc ocamlpool shmffi))
