#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import folly.iobuf as _fbthrift_iobuf
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions


import apache.thrift.type.standard.thrift_types

import facebook.thrift.annotation.cpp.thrift_types

import facebook.thrift.annotation.scope.thrift_types

import facebook.thrift.annotation.thrift.thrift_types


class GeneratePatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.GeneratePatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/GeneratePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_GeneratePatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.GeneratePatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.GeneratePatch, self)


class BoolPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "invert",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BoolPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/BoolPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BoolPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.BoolPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.BoolPatch, self)


class BytePatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BytePatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/BytePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BytePatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.BytePatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.BytePatch, self)


class I16Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I16Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/I16Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I16Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.I16Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.I16Patch, self)


class I32Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I32Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/I32Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I32Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.I32Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.I32Patch, self)


class I64Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I64Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/I64Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I64Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.I64Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.I64Patch, self)


class FloatPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_float,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_float,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.FloatPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/FloatPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_FloatPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.FloatPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.FloatPatch, self)


class DoublePatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_double,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            _fbthrift_python_types.typeinfo_double,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.DoublePatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/DoublePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_DoublePatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.DoublePatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.DoublePatch, self)


class StringPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "prepend",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "append",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.StringPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/StringPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_StringPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.StringPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.StringPatch, self)


class BinaryPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "prepend",  # name
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "append",  # name
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BinaryPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/op/BinaryPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BinaryPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.BinaryPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.BinaryPatch, self)


class DurationPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.type.standard.thrift_types.DurationStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.type.standard.thrift_types.DurationStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.DurationPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/type/DurationPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_DurationPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.DurationPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.DurationPatch, self)


class TimePatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.type.standard.thrift_types.TimeStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "add",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.type.standard.thrift_types.DurationStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.TimePatch"

    @staticmethod
    def __get_thrift_uri__():
        return "facebook.com/thrift/type/TimePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_TimePatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.TimePatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("thrift.lib.thrift.patch.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.TimePatch, self)

# This unfortunately has to be down here to prevent circular imports
import apache.thrift.op.patch.thrift_metadata

class PatchOp(_fbthrift_python_types.Enum, int):
    Assign = 1
    Clear = 2
    PatchPrior = 3
    EnsureUnion = 4
    EnsureStruct = 5
    PatchAfter = 6
    Remove = 7
    Add = 8
    Put = 9
    Unspecified = 0
    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.PatchOp"

    @staticmethod
    def __get_metadata__():
        return apache.thrift.op.patch.thrift_metadata.gen_metadata_enum_PatchOp()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.op.patch.types")
        return py3_types.PatchOp(self.value)

    def _to_py_deprecated(self):
        return self.value

def _fbthrift_metadata__struct_GeneratePatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_GeneratePatch()
def _fbthrift_metadata__struct_BoolPatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_BoolPatch()
def _fbthrift_metadata__struct_BytePatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_BytePatch()
def _fbthrift_metadata__struct_I16Patch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_I16Patch()
def _fbthrift_metadata__struct_I32Patch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_I32Patch()
def _fbthrift_metadata__struct_I64Patch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_I64Patch()
def _fbthrift_metadata__struct_FloatPatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_FloatPatch()
def _fbthrift_metadata__struct_DoublePatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_DoublePatch()
def _fbthrift_metadata__struct_StringPatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_StringPatch()
def _fbthrift_metadata__struct_BinaryPatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_BinaryPatch()
def _fbthrift_metadata__struct_DurationPatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_DurationPatch()
def _fbthrift_metadata__struct_TimePatch():
    return apache.thrift.op.patch.thrift_metadata.gen_metadata_struct_TimePatch()

_fbthrift_all_structs = [
    GeneratePatch,
    BoolPatch,
    BytePatch,
    I16Patch,
    I32Patch,
    I64Patch,
    FloatPatch,
    DoublePatch,
    StringPatch,
    BinaryPatch,
    DurationPatch,
    TimePatch,
]
_fbthrift_python_types.fill_specs(*_fbthrift_all_structs)
